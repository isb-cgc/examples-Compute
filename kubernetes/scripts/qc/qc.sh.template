if [ ! -f share/{filename}.success ] 
	then mkdir scratch/qc-{filename}
	cd scratch/qc-{filename}
	cp ../../share/{filename}* .
	if [ $(echo {filename} | grep '^.*\.tar$') ] || [ $(echo {filename} | grep '^.*\.tar.gz$') ] && [ ! -f ../../scratch/{filename}.fastqc.success ]
		then if [ ! -f {filename}.contents ] 
			then tar -xfvt share/{filename} > {filename}.contents
		fi && (cat {filename}.contents | tr '\n' | xargs -0 -n1 fastqc) && (touch ../../share/{filename}.fastqc.success)
	elif [ ! -f ../../scratch/{filename}.fastqc.success ]
		then fastqc {filename} && touch ../../share/{filename}.fastqc.success
	fi
	if [ $(echo {filename} | grep '^.*\.bam$') ] && [ ! -f ../../share/{filename}.picard.success ]
		then if [ ! -f {filename}.bai ]
			then java -jar /usr/picard/picard.jar BuildBamIndex I={filename} O={filename}.bai
		fi && java -jar /usr/picard/picard.jar CollectMultipleMetrics INPUT={filename} OUTPUT={filename}.multiple_metrics PROGRAM=CollectAlignmentSummaryMetrics PROGRAM=CollectInsertSizeMetrics PROGRAM=CollectQualityYieldMetrics PROGRAM=QualityScoreDistribution && touch ../../share/{filename}.picard.success
	fi
	analysis_id=$(cat ../../share/{filename}.analysis_id)
	mkdir ../../share/qc-{filename}
	for output_file in $(ls)
		do cp $output_file ../../share/qc-{filename}/$analysis_id.$output_file
	done && touch ../../share/{filename}.success && rm ../../share/{filename} && cd .. && rm -r qc-{filename}
else echo 'File {filename} already processed -- skipping'; fi
