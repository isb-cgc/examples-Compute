INDEXED_BAM=0
if [ ! -f {filename}.success ] 
	if [ $(echo {filename} | grep '^.*\.tar$') ] || [ $(echo {filename} | grep '^.*\.tar.gz$') ] && [ ! -f {filename}.fastqc.success ]
		then if [ ! -f {filename}.contents ] 
			then tar -xfvt {filename} > {filename}.contents
		fi && (cat {filename}.contents | tr '\n' | xargs -0 -n1 fastqc) && (touch {filename}.fastqc.success) && rm {filename} && $(cat {filename}.contents | tr '\n' | xargs -0 -n1 rm)
	elif [ ! {filename}.fastqc.success ]
		then fastqc {filename} && touch {filename}.fastqc.success && rm {filename}
	fi
	if [ $(echo {filename} | grep '^.*\.bam$') ] && [ ! -f {filename}.picard.success ]
		then if [ ! -f {filename}.bai ]
			then INDEXED_BAM=1 && java -jar /usr/picard/picard.jar BuildBamIndex I={filename} O={filename}.bai
		fi && java -jar /usr/picard/picard.jar CollectMultipleMetrics INPUT={filename} OUTPUT={filename}.multiple_metrics PROGRAM=CollectAlignmentSummaryMetrics PROGRAM=CollectInsertSizeMetrics PROGRAM=CollectQualityYieldMetrics PROGRAM=QualityScoreDistribution && touch {filename}.picard.success && rm {filename}
	fi
	analysis_id=$(cat {filename}.analysis_id)
	for output_file in $(ls)
		if [ ! $(echo {filename} | grep '^.*\.bai') ]
		then mv $output_file $analysis_id.$output_file; fi
	done && {filename}.success
	if [ "$INDEXED_BAM" == 0 ]
		then rm {filename}.bai
	fi
else echo 'File {filename} already processed -- skipping'; fi
echo "QC processing completion time (in seconds): $SECONDS" >> {filename}.log
