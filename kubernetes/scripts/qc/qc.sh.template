INDEXED_BAM=0
if [ ! -f {filename}.success ] 
	then if [ $(echo {filename} | grep '^.*\.tar$') ] || [ $(echo {filename} | grep '^.*\.tar.gz$') ] && [ ! -f {filename}.fastqc.success ]
		then if [ ! -f {filename}.contents ] 
			then tar -xfvt {filename} > {filename}.contents
		fi
		(cat {filename}.contents | tr '\n' | xargs -0 -n1 fastqc >> {filename}.log) && (touch {filename}.fastqc.success) && rm {filename} && $(cat {filename}.contents | tr '\n' | xargs -0 -n1 rm)
	elif [ ! {filename}.fastqc.success ]
		then fastqc {filename} >> {filename}.log && touch {filename}.fastqc.success && rm {filename}
	fi
	if [ $(echo {filename} | grep '^.*\.bam$') ] && [ ! -f {filename}.picard.success ]
		then if [ ! -f {filename}.bai ]
			then INDEXED_BAM=1 && echo "Indexing BAM file {filename} ..." >> {filename}.log && java -jar /usr/picard/picard.jar BuildBamIndex I={filename} O={filename}.bai >> {filename}.log
		else java -jar /usr/picard/picard.jar ValidateSamFile I={filename} MODE=SUMMARY 2> bam_validation.log & PID=$!
			sleep 10
			kill -SIGTERM $PID
			if [ $(grep "WARNING: BAM index file .*\.bai is older than BAM .*\.bam" bam_validation.log) ] 
				then INDEXED_BAM=1 && echo "Indexing BAM file {filename} ..." >> {filename}.log && java -jar /usr/picard/picard.jar BuildBamIndex I={filename} O={filename}.bai >> {filename}.log
			fi
			java -jar /usr/picard/picard.jar CollectMultipleMetrics INPUT={filename} OUTPUT={filename}.multiple_metrics PROGRAM=CollectAlignmentSummaryMetrics PROGRAM=CollectInsertSizeMetrics PROGRAM=CollectQualityYieldMetrics PROGRAM=QualityScoreDistribution >> {filename}.log
		fi
		touch {filename}.picard.success && rm {filename}
	fi
	analysis_id=$(cat {filename}.analysis_id)
	for output_file in $(ls)
		do if [ ! $(echo {filename} | grep '^.*\.bai') ]
			then mv $output_file $analysis_id.$output_file
		fi
	done
	touch {filename}.success
	if [ "$INDEXED_BAM" = 0 ]
		then rm {filename}.bai
	fi
else echo 'File {filename} already processed -- skipping'; fi
echo "QC processing completion time (in seconds): $SECONDS" >> {filename}.log
